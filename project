using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading.Tasks;
using Tao.OpenGl;
using GlmNet;


using System.IO;
using System.Diagnostics;

namespace Graphics
{
    class Renderer
    {
        Shader sh;
        
        uint catBufferID;
        uint xyzAxesBufferID;

        //3D Drawing
        mat4 ModelMatrix;
        mat4 ViewMatrix;
        mat4 ProjectionMatrix;
        
        int ShaderModelMatrixID;
        int ShaderViewMatrixID;
        int ShaderProjectionMatrixID;

        const float rotationSpeed = 1f;
        float rotationAngle = 0;

        public float translationX=0, 
                     translationY=0, 
                     translationZ=0;

        Stopwatch timer = Stopwatch.StartNew();

        vec3 triangleCenter;

        public void Initialize()
        {
            string projectPath = Directory.GetParent(Environment.CurrentDirectory).Parent.FullName;
            sh = new Shader(projectPath + "\\Shaders\\SimpleVertexShader.vertexshader", projectPath + "\\Shaders\\SimpleFragmentShader.fragmentshader");

            Gl.glClearColor(0, 0, 0.4f, 1);
            
            float[] catVertices= { 
		        //HEAD    
            -.462f,.624f,0,//1
            0.87058823529f,0.34901960784f,0,
            -.692f,.653f,0,//2
            0.87058823529f,0.34901960784f,0,
            -.481f,.723f,0,//3
            0.87058823529f,0.34901960784f,0,

            -.481f,.723f,0,//4
             0.90196078431f,0.36470588235f,0,
            -.462f,.624f,0,//5
            0.87058823529f,0.34901960784f,0,
            -.279f,.782f,0,//6
            0.87058823529f,0.34901960784f,0,

            -.462f,.624f,0,//7
            0.75294117647f,0.30196078431f,0,
            -.279f,.782f,0,//8
            0.87058823529f,0.34901960784f,0,
            -.067f,.614f,0,//9
            0.75294117647f,0.30196078431f,0,

            -.279f,.782f,0,//10
            0.87058823529f,0.34901960784f,0,
            -.067f,.614f,0,//11
            0.87058823529f,0.34901960784f,0,
            -.096f,.723f,0,//12
            0.90196078431f,0.36470588235f,0,

            -.067f,.614f,0,//13
            0.87058823529f,0.34901960784f,0,
            -.096f,.723f,0,//14
            0.87058823529f,0.34901960784f,0,
            .125f,.634f,0,//15
            0.87058823529f,0.34901960784f,0,

            .125f,.634f,0,//16
            0.87058823529f,0.34901960784f,0,
            -.067f,.614f,0,//17
            0.87058823529f,0.34901960784f,0,
            .144f,.446f,0,//18
            0.87058823529f,0.34901960784f,0,

            -.067f,.614f,0,//19
            0.87058823529f,0.34901960784f,0,
            .144f,.446f,0,//20
            0.87058823529f,0.34901960784f,0,
            .058f,.317f,0,//21
            0.94117647058f,0.37647058823f,0,

            -.067f,.614f,0,//22
            1f,0.4f,0,
            .058f,.317f,0,//23
            1f,0.4f,0,
            -.288f,.139f,0,//24
            1f,0.4f,0,

            -.462f,.624f,0,//25
            0.75294117647f,0.30196078431f,0,
            -.067f,.614f,0,//26
            0.75294117647f,0.30196078431f,0,
            -.288f,.139f,0,//27
            0.94117647058f,0.37647058823f,0,

            -.288f,.139f,0,//28
            1f,0.4f,0,
            -.462f,.624f,0,//29
            1f,0.4f,0,
            -.567f,.277f,0,//30
            1f,0.4f,0,

            -.462f,.624f,0,//31
            0.87058823529f,0.34901960784f,0,
            -.567f,.277f,0,//32
            0.94117647058f,0.37647058823f,0,
            -.683f,.426f,0,//33
            0.87058823529f,0.34901960784f,0,

            -.683f,.426f,0,//34
            0.87058823529f,0.34901960784f,0,
            -.462f,.624f,0,//35
            0.87058823529f,0.34901960784f,0,
            -.692f,.653f,0,//36
            0.87058823529f,0.34901960784f,0,




            //EYES
            
            -.125f,.360f,0,
            0,0,0,
            -.090f,.337f,0,
            0,0,0,
            -.045f,.337f,0,
            0,0,0,
            -.01f,.360f,0,
            0,0,0,


            -.51f,.360f,0,
            0,0,0,
            -.48f,.337f,0,
            0,0,0,
            -.44f,.337f,0,
            0,0,0,
            -.404f,.360f,0,
            0,0,0,
                


            ////MOUTH
            -0.346f,0.168f,0,//37
            0,0,0,
            -0.288f,0.139f,0,//38
            0,0,0,
            -0.221f,0.168f,0,//39
            0,0,0,
            -0.25f,0.208f,0,//40
            0,0,0,
            -0.308f,0.208f,0,//41
            0,0,0,


            //EARS
            //right
            .125f,.634f,0,
            0.87058823529f,0.34901960784f,0,
            -.096f,.723f,0,
             0.94117647058f,0.37647058823f,0,
            .058f,.861f,0,
            1f,0.56078431372f,0.26666666666f,

            .058f,.861f,0,
            0,0,0,
            .125f,.634f,0,
            0,0,0,
            .125f,.931f,0,
            0,0,0,
            //left
            -.692f,.653f,0,
            0.87058823529f,0.34901960784f,0,
            -.481f,.723f,0,
            0.94117647058f,0.37647058823f,0,
            -.635f,.881f,0,
            1f,0.56078431372f,0.26666666666f,

            -.692f,.653f,0,
            0,0,0,
            -.635f,.881f,0,
            0,0,0,
            -.702f,.95f,0,
            0,0,0,

            //body
            -.567f,.277f,0,
            0.75294117647f,0.30196078431f,0,
            -.288f,.139f,0,
            1f,0.4f,0,
            -.442f,-.158f,0,
            1f,0.4f,0,

            -.288f,.139f,0,
            1f,0.4f,0,
            -.01f,.285f,0,
            0.75294117647f,0.30196078431f,0,
            -.125f,-.158f,0,
            1f,0.4f,0,

            -.567f,.277f,0,
            0.87058823529f,0.34901960784f,0,
            -.442f,-.158f,0,
            0.87058823529f,0.34901960784f,0,
            -.452f,-.881f,0,
            0.87058823529f,0.34901960784f,0,

            -.01f,.285f,0,
            0.87058823529f,0.34901960784f,0,
            -.125f,-.158f,0,
            0.87058823529f,0.34901960784f,0,
            -.115f,-.881f,0,
            0.87058823529f,0.34901960784f,0,

            -.288f,.139f,0,
            0.75294117647f,0.30196078431f,0,
            -.442f,-.158f,0,
            0.87058823529f,0.34901960784f,0,
            -.288f,-.782f,0,
            0.87058823529f,0.34901960784f,0,

            -.288f,.139f,0,
           0.75294117647f,0.30196078431f,0,
            -.288f,-.782f,0,
            0.87058823529f,0.34901960784f,0,
            -.125f,-.158f,0,
            0.87058823529f,0.34901960784f,0,

            -.442f,-.158f,0,
            1f,0.4f,0,
            -.288f,-.782f,0,
            1f,0.4f,0,
            -.452f,-.881f,0,
            1f,0.4f,0,

            -.115f,-.881f,0,
            1f,0.4f,0,
            -.288f,-.782f,0,
            1f,0.4f,0,
            -.125f,-.158f,0,
            1f,0.4f,0,

            -.452f,-.881f,0,
            0,0,0,
            -.115f,-.881f,0,
            0,0,0,
            -.288f,-.782f,0,
            0,0,0,

            //tail

            -.01f,.285f,0,
            0.90196078431f,0.36470588235f,0,
            -.115f,-.881f,0,
            0.90196078431f,0.36470588235f,0,
            .288f,-.139f,0,
            0.90196078431f,0.36470588235f,0,

            .288f,-.139f,0,
            0.87058823529f,0.34901960784f,0,
            -.115f,-.881f,0,
            0.89411764705f,0.36078431372f,0,
            .288f,-.693f,0,
            0.89411764705f,0.36078431372f,0,

            .288f,-.693f,0,
            0.87058823529f,0.34901960784f,0,
            -.115f,-.881f,0,
            0.87058823529f,0.34901960784f,0,
            .154f,-.901f,0,
            0.87058823529f,0.34901960784f,0,

            .288f,-.693f,0,
            0.87058823529f,0.34901960784f,0,
            .615f,-.881f,0,
            0.75294117647f,0.30196078431f,0,
            .154f,-.901f,0,
            0.75294117647f,0.30196078431f,0,

            .288f,-.693f,0,
            0.75294117647f,0.30196078431f,0,
            .615f,-.881f,0,
            0.66666666666f,0.28235294117f,0,
            .827f,-.881f,0,
            0.66666666666f,0.28235294117f,0,

            .827f,-.881f,0,
            0,0,0,
            .663f,-.822f,0,
            0,0,0,
            .635f,-.733f,0,
            0,0,0,
            }; 
            
            triangleCenter = new vec3(-.3f,.3f , 0);

            float[] xyzAxesVertices = {
		        //x
		        0.0f, 0.0f, 0.0f,
                0f, 0.0f, 0.0f, 
		        0f, 0.0f, 0.0f,
                0f, 0.0f, 0.0f, 
		        //y
	            0.0f, 0.0f, 0.0f,
                0.0f,0f, 0.0f, 
		        0.0f, 0f, 0.0f,
                0.0f, 0f, 0.0f, 
		        //z
	            0.0f, 0.0f, 0.0f,
                0.0f, 0.0f, 0f,  
		        0.0f, 0.0f, 0f,
                0.0f, 0.0f, 0f,  
            };


            catBufferID = GPU.GenerateBuffer(catVertices);
            xyzAxesBufferID = GPU.GenerateBuffer(xyzAxesVertices);

            // View matrix 
            ViewMatrix = glm.lookAt(
                        new vec3(0, 0, 3), // Camera is at (0,5,5), in World Space
                        new vec3(0, 0, 0), // and looks at the origin
                        new vec3(0, 1, 0)  // Head is up (set to 0,-1,0 to look upside-down)
                );
            // Model Matrix 
            ModelMatrix = new mat4(1);

            //ProjectionMatrix
            ProjectionMatrix = glm.perspective(45.0f, 4.0f / 3.0f, 0.1f, 100.0f);
            
            sh.UseShader();


            //handle MVP uniform 
            ShaderModelMatrixID = Gl.glGetUniformLocation(sh.ID, "modelMatrix");
            ShaderViewMatrixID = Gl.glGetUniformLocation(sh.ID, "viewMatrix");
            ShaderProjectionMatrixID = Gl.glGetUniformLocation(sh.ID, "projectionMatrix");

            Gl.glUniformMatrix4fv(ShaderViewMatrixID, 1, Gl.GL_FALSE, ViewMatrix.to_array());
            Gl.glUniformMatrix4fv(ShaderProjectionMatrixID, 1, Gl.GL_FALSE, ProjectionMatrix.to_array());

            timer.Start();
        }

        public void Draw()
        {
            sh.UseShader();
            Gl.glClear(Gl.GL_COLOR_BUFFER_BIT);

            #region XYZ axis

            Gl.glBindBuffer(Gl.GL_ARRAY_BUFFER, xyzAxesBufferID);
            Gl.glUniformMatrix4fv(ShaderModelMatrixID, 1, Gl.GL_FALSE, new mat4(1).to_array()); // Identity

            Gl.glEnableVertexAttribArray(0);
            Gl.glEnableVertexAttribArray(1);

            Gl.glVertexAttribPointer(0, 3, Gl.GL_FLOAT, Gl.GL_FALSE, 6 * sizeof(float), (IntPtr)0);
            Gl.glVertexAttribPointer(1, 3, Gl.GL_FLOAT, Gl.GL_FALSE, 6 * sizeof(float), (IntPtr)(3 * sizeof(float)));
             
            Gl.glDrawArrays(Gl.GL_LINES, 0, 6);

            Gl.glDisableVertexAttribArray(0);
            Gl.glDisableVertexAttribArray(1);

            #endregion

            #region Animated Triangle
            Gl.glBindBuffer(Gl.GL_ARRAY_BUFFER, catBufferID);
            Gl.glUniformMatrix4fv(ShaderModelMatrixID, 1, Gl.GL_FALSE, ModelMatrix.to_array());

            Gl.glEnableVertexAttribArray(0);
            Gl.glEnableVertexAttribArray(1);

            Gl.glVertexAttribPointer(0, 3, Gl.GL_FLOAT, Gl.GL_FALSE, 6 * sizeof(float), (IntPtr)0);
            Gl.glVertexAttribPointer(1, 3, Gl.GL_FLOAT, Gl.GL_FALSE, 6 * sizeof(float), (IntPtr)(3 * sizeof(float)));

            Gl.glDrawArrays(Gl.GL_TRIANGLES, 0, 36);
            Gl.glDrawArrays(Gl.GL_LINE_STRIP, 36, 4);
            Gl.glDrawArrays(Gl.GL_LINE_STRIP, 40, 4);
            Gl.glDrawArrays(Gl.GL_POLYGON, 44, 5);
            Gl.glDrawArrays(Gl.GL_TRIANGLES, 49, 57);

            Gl.glDisableVertexAttribArray(0);
            Gl.glDisableVertexAttribArray(1);
            #endregion
        }
        

        public void Update()
        {

            timer.Stop();
            var deltaTime = timer.ElapsedMilliseconds/1000.0f;

            rotationAngle += deltaTime * rotationSpeed;

            List<mat4> transformations = new List<mat4>();
            transformations.Add(glm.translate(new mat4(1), -1 * triangleCenter));
            transformations.Add(glm.rotate(rotationAngle, new vec3(0, 0, 1)));
            transformations.Add(glm.translate(new mat4(1),  triangleCenter));
            transformations.Add(glm.translate(new mat4(1), new vec3(translationX, translationY, translationZ)));

            ModelMatrix =  MathHelper.MultiplyMatrices(transformations);
            
            timer.Reset();
            timer.Start();
        }
        
        public void CleanUp()
        {
            sh.DestroyShader();
        }
    }
}
